name: Release

on:
  release:
    types: [ prereleased, released ]

jobs:
  docker-release:
    name: Release docker images and config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prerelease image tags
        if: ${{ github.event.release.prerelease }}
        run: |
          TAG=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')
          echo "DOCKER_IMAGE_TAGS=newrelic/newrelic-k8s-operator:${TAG}-pre" >> $GITHUB_ENV
      - name: Release image tags
        if: ${{ ! github.event.release.prerelease }}
        run: |
          TAG=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')
          echo "DOCKER_IMAGE_TAGS=newrelic/newrelic-k8s-operator:${TAG},newrelic/newrelic-k8s-operator:latest" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.FSI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.FSI_DOCKERHUB_TOKEN }}
      - name: Build and load x64 image
        # We need to build a single-arch image again to be able to --load it into the host
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          load: true
          push: false
          platforms: |
            linux/amd64
          tags: newrelic/newrelic-k8s-operator:ci-scan
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.10.0
        with:
          image-ref: newrelic/newrelic-k8s-operator:ci-scan
          format: table
          exit-code: '1'
          ignore-unfixed: true
          severity: HIGH,CRITICAL
      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          push: true
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm
          tags: ${{ env.DOCKER_IMAGE_TAGS }}